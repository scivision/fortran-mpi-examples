name: oneapi-linux

env:
  LINUX_CPP_COMPONENTS: intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic
  LINUX_FORTRAN_COMPONENTS: intel-oneapi-compiler-fortran
  LINUX_MKL_COMPONENTS: "intel-oneapi-mkl intel-oneapi-mkl-devel"
  LINUX_MPI_COMPONENTS: "intel-oneapi-mpi intel-oneapi-mpi-devel"
# https://github.com/oneapi-src/oneapi-ci/blob/master/.github/workflows/build_all.yml
  CTEST_NO_TESTS_ACTION: error
  CC: icx
  FC: ifx

on:
  push:
    paths:
      - "**.c"
      - "**.f"
      - "**.F"
      - "**.f90"
      - "**.F90"
      - "**.cmake"
      - "**/CMakeLists.txt"
      - ".github/workflows/oneapi-linux.yml"


jobs:

  linux:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v4

    - name: cache install oneAPI
      id: cache-install
      uses: actions/cache@v3
      with:
        path: |
          /opt/intel/oneapi
        key: install-apt

    - name: non-cache install oneAPI
      if: steps.cache-install.outputs.cache-hit != 'true'
      timeout-minutes: 10
      run: |
        sh -c .github/workflows/oneapi_setup_apt_repo_linux.sh
        sudo apt install --no-install-recommends ${{ env.LINUX_CPP_COMPONENTS }} ${{ env.LINUX_FORTRAN_COMPONENTS }} ${{ env.LINUX_MPI_COMPONENTS }}

    - name: Setup Intel oneAPI environment
      run: |
        source /opt/intel/oneapi/setvars.sh
        printenv >> $GITHUB_ENV

    - name: patch PATH (this should be done by setvar.sh)
      run: echo "/opt/intel/oneapi/compiler/latest/bin" >> $GITHUB_PATH

    - name: print env
      run: printenv

    - name: ls compiler dir
      run: ls /opt/intel/oneapi/compiler/

    - name: install Ninja
      run: sudo apt install ninja-build
# install ninja needs to be own step as not cached by design

    - name: Release workflow
      run: cmake --workflow --preset debug

    - name: Release workflow
      run: cmake --workflow --preset release

    - name: exclude unused files from cache
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: sh -c .github/workflows/oneapi_cache_exclude_linux.sh
